apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'
apply from: 'util.gradle'

android {

    compileSdkVersion appCompileSdkVersion
    buildToolsVersion appBuildToolVersion

    defaultConfig {
        applicationId "com.ovwvwvo.appinfos"
        minSdkVersion appMinSdkVersion
        targetSdkVersion appTargetSdkVersion
        versionCode appVersionCode
        versionName appVersionName

        flavorDimensions ""

        manifestPlaceholders = [Umeng_key: umengKey]

        resValue "string", "qqScheme", qqScheme
        buildConfigField 'String', 'qqKey', qqKey
        buildConfigField 'String', 'qqValue', qqValue

        buildConfigField 'String', 'wechatKey', wechatKey
        buildConfigField 'String', 'wechatValue', wechatValue

        buildConfigField 'String', 'sinaKey', sinaKey
        buildConfigField 'String', 'sinaValue', sinaValue
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        jumboMode true
    }

    signingConfigs {
        releaseSigning {
            storeFile file("keystore/keystore.jks")
            storePassword appStorePassword
            keyAlias appKeyAlias
            keyPassword appKeyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSigning
        }
        debug {
            ext.enableCrashlytics = false
            signingConfig signingConfigs.releaseSigning
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    productFlavors {
        meizu {}
        qihu {}
        tencent {}
        wandoujia {}
        google {}
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def fileName = output.outputFile.name
            if (fileName != null && fileName.endsWith('.apk')) {
                fileName = fileName.replace("app", "AppInfo-${variant.versionName}-${variant.versionCode}")
                outputFileName = new File(output.outputFile.parent, fileName)
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile 'com.google.firebase:firebase-core:11.0.4'
    compile 'com.google.firebase:firebase-ads:11.0.4'

    compile "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.instabug.library:instabug:4.2.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true
    }

    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.afollestad.material-dialogs:core:0.9.4.1'

    compile 'com.ovwvwvo:jkit:0.1.7'
    compile 'com.ovwvwvo:common:0.1.7'
    compile 'com.ovwvwvo:share:0.1.6'

    testCompile 'junit:junit:4.12'
}